# Generated by Django 5.1.2 on 2024-11-22 16:43

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Lecture',
            fields=[
                ('LECTURE_ID', models.AutoField(primary_key=True, serialize=False)),
                ('PROFESSOR', models.CharField(max_length=50)),
                ('LECTURE_CODE', models.CharField(max_length=50, unique=True)),
                ('NAME', models.CharField(max_length=50)),
                ('LECTURE_DAY', models.CharField(max_length=50)),
                ('LECTURE_TIME', models.CharField(max_length=50)),
                ('SEMESTER', models.CharField(default='1', max_length=50)),
                ('YEAR', models.CharField(default='2024', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.AutoField(primary_key=True, serialize=False, verbose_name='사용자 ID')),
                ('username', models.CharField(max_length=50, unique=True, verbose_name='아이디')),
                ('NICKNAME', models.CharField(max_length=50, verbose_name='닉네임')),
                ('SCHOOL_EMAIL', models.EmailField(blank=True, max_length=50, null=True, verbose_name='학교 이메일')),
                ('STUDENT_NUMBER', models.CharField(blank=True, max_length=8, null=True, verbose_name='학번')),
                ('MAJOR', models.CharField(blank=True, max_length=50, null=True, verbose_name='전공')),
                ('CREATED_AT', models.DateTimeField(auto_now_add=True, verbose_name='생성 일자')),
                ('TOTAL_POINT', models.BigIntegerField(default=0, verbose_name='점수 총점')),
                ('INTERESTS', models.TextField(blank=True, null=True, verbose_name='관심 있는 과목')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '유저',
                'db_table': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('QUESTION_ID', models.AutoField(primary_key=True, serialize=False)),
                ('TITLE', models.CharField(max_length=50)),
                ('CONTENT', models.TextField()),
                ('CHECKED', models.BooleanField(default=False)),
                ('POINT', models.PositiveIntegerField(default=0)),
                ('CREATED_AT', models.DateTimeField(auto_now_add=True)),
                ('MODIFIED_AT', models.DateTimeField(auto_now=True)),
                ('CURIOUS', models.PositiveIntegerField(default=0)),
                ('LECTURE_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hurdlethon.lecture')),
                ('USER_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('ANSWER_ID', models.AutoField(primary_key=True, serialize=False)),
                ('CONTENT', models.TextField()),
                ('CREATED_AT', models.DateTimeField(auto_now_add=True)),
                ('MODIFIED_AT', models.DateTimeField(auto_now=True)),
                ('LIKE', models.PositiveIntegerField(default=0)),
                ('USER_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('LECTURE_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hurdlethon.lecture')),
                ('QUESTION_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hurdlethon.question')),
            ],
        ),
    ]
